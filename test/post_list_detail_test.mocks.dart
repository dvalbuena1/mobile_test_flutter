// Mocks generated by Mockito 5.2.0 from annotations
// in mobile_test_flutter/test/post_list_detail_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:connectivity_plus/connectivity_plus.dart' as _i6;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i8;
import 'package:mobile_test_flutter/data/dao/local_storage/local_storage_comment.dart'
    as _i5;
import 'package:mobile_test_flutter/data/dao/local_storage/local_storage_post.dart'
    as _i3;
import 'package:mobile_test_flutter/data/dao/local_storage/local_storage_user.dart'
    as _i4;
import 'package:mobile_test_flutter/data/models/post.dart' as _i10;
import 'package:mobile_test_flutter/data/models/user.dart' as _i12;
import 'package:mobile_test_flutter/data/network/api_json_placeholder.dart'
    as _i2;
import 'package:mobile_test_flutter/data/repositories/comment_repository.dart'
    as _i13;
import 'package:mobile_test_flutter/data/repositories/post_repository.dart'
    as _i9;
import 'package:mobile_test_flutter/data/repositories/user_repository.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeApiJsonPlaceholder_0 extends _i1.Fake
    implements _i2.ApiJsonPlaceholder {}

class _FakeLocalStoragePost_1 extends _i1.Fake implements _i3.LocalStoragePost {
}

class _FakeLocalStorageUser_2 extends _i1.Fake implements _i4.LocalStorageUser {
}

class _FakeLocalStorageComment_3 extends _i1.Fake
    implements _i5.LocalStorageComment {}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i6.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<_i8.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(Invocation.getter(#onConnectivityChanged),
              returnValue: Stream<_i8.ConnectivityResult>.empty())
          as _i7.Stream<_i8.ConnectivityResult>);
  @override
  _i7.Future<_i8.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(Invocation.method(#checkConnectivity, []),
              returnValue: Future<_i8.ConnectivityResult>.value(
                  _i8.ConnectivityResult.bluetooth))
          as _i7.Future<_i8.ConnectivityResult>);
}

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i9.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiJsonPlaceholder get apiJsonPlaceholder =>
      (super.noSuchMethod(Invocation.getter(#apiJsonPlaceholder),
          returnValue: _FakeApiJsonPlaceholder_0()) as _i2.ApiJsonPlaceholder);
  @override
  _i3.LocalStoragePost get localStoragePost =>
      (super.noSuchMethod(Invocation.getter(#localStoragePost),
          returnValue: _FakeLocalStoragePost_1()) as _i3.LocalStoragePost);
  @override
  _i7.Future<List<_i10.PostModel>?> getPostsFromApi() =>
      (super.noSuchMethod(Invocation.method(#getPostsFromApi, []),
              returnValue: Future<List<_i10.PostModel>?>.value())
          as _i7.Future<List<_i10.PostModel>?>);
  @override
  _i7.Future<List<_i10.PostModel>?> getPostsOnline() =>
      (super.noSuchMethod(Invocation.method(#getPostsOnline, []),
              returnValue: Future<List<_i10.PostModel>?>.value())
          as _i7.Future<List<_i10.PostModel>?>);
  @override
  _i7.Future<List<_i10.PostModel>?> getPostsOffline() =>
      (super.noSuchMethod(Invocation.method(#getPostsOffline, []),
              returnValue: Future<List<_i10.PostModel>?>.value())
          as _i7.Future<List<_i10.PostModel>?>);
  @override
  _i7.Future<void> updatePost(_i10.PostModel? post) =>
      (super.noSuchMethod(Invocation.method(#updatePost, [post]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> deletePost(_i10.PostModel? post) =>
      (super.noSuchMethod(Invocation.method(#deletePost, [post]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteList(List<_i10.PostModel>? posts) =>
      (super.noSuchMethod(Invocation.method(#deleteList, [posts]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i11.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiJsonPlaceholder get apiJsonPlaceholder =>
      (super.noSuchMethod(Invocation.getter(#apiJsonPlaceholder),
          returnValue: _FakeApiJsonPlaceholder_0()) as _i2.ApiJsonPlaceholder);
  @override
  _i4.LocalStorageUser get localStorageUser =>
      (super.noSuchMethod(Invocation.getter(#localStorageUser),
          returnValue: _FakeLocalStorageUser_2()) as _i4.LocalStorageUser);
  @override
  _i7.Future<_i12.UserModel?> getUserOnline(int? userId) =>
      (super.noSuchMethod(Invocation.method(#getUserOnline, [userId]),
              returnValue: Future<_i12.UserModel?>.value())
          as _i7.Future<_i12.UserModel?>);
  @override
  _i7.Future<_i12.UserModel?> getUserOffline(int? userId) =>
      (super.noSuchMethod(Invocation.method(#getUserOffline, [userId]),
              returnValue: Future<_i12.UserModel?>.value())
          as _i7.Future<_i12.UserModel?>);
}

/// A class which mocks [CommentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentRepository extends _i1.Mock implements _i13.CommentRepository {
  MockCommentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiJsonPlaceholder get apiJsonPlaceholder =>
      (super.noSuchMethod(Invocation.getter(#apiJsonPlaceholder),
          returnValue: _FakeApiJsonPlaceholder_0()) as _i2.ApiJsonPlaceholder);
  @override
  _i5.LocalStorageComment get localStorageComment => (super.noSuchMethod(
      Invocation.getter(#localStorageComment),
      returnValue: _FakeLocalStorageComment_3()) as _i5.LocalStorageComment);
  @override
  _i7.Future<List<_i10.CommentModel>?> getCommentsOnline(int? postId) =>
      (super.noSuchMethod(Invocation.method(#getCommentsOnline, [postId]),
              returnValue: Future<List<_i10.CommentModel>?>.value())
          as _i7.Future<List<_i10.CommentModel>?>);
  @override
  _i7.Future<List<_i10.CommentModel>> getCommentsOffline(int? postId) =>
      (super.noSuchMethod(Invocation.method(#getCommentsOffline, [postId]),
              returnValue:
                  Future<List<_i10.CommentModel>>.value(<_i10.CommentModel>[]))
          as _i7.Future<List<_i10.CommentModel>>);
}
